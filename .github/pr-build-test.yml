# .github/workflows/pr-build-test.yml
name: PR Build and Snapshot Publish

on:
  pull_request:
    branches:
      - main # Keep this if you also want PRs targeting main to trigger it
      - dev  # <<< ADD THIS LINE to trigger for PRs targeting dev
  push: # <<< ADD PUSH TRIGGER
    branches:
      - dev # <<< Trigger on pushes directly to dev

permissions:
  contents: read # Needed to check out the code
  packages: write # Needed to publish snapshots to GitHub Packages

jobs:
  build-test-snapshot:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches all history for accurate commit info

      - name: Set up JDK 19 # Or your required Java version
        uses: actions/setup-java@v4
        with:
          java-version: '19'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3 # Includes caching

      - name: Generate Snapshot Version
        id: versioning
        run: |
          # This logic should still work fine for dev PRs
          BASE_VERSION=$(grep '^libVersion=' gradle.properties | cut -d'=' -f2 | sed 's/-SNAPSHOT//')
          COMMIT_SHA_SHORT=$(git rev-parse --short HEAD)
          PR_NUMBER=${{ github.event.number }}
          # Example: 1.0.2-pr45-b4e5f6a-SNAPSHOT (if base is 1.0.2)
          SNAPSHOT_VERSION="${BASE_VERSION}-pr${PR_NUMBER}-${COMMIT_SHA_SHORT}-SNAPSHOT"
          echo "SNAPSHOT_VERSION=${SNAPSHOT_VERSION}" >> $GITHUB_OUTPUT

      - name: Build and Test
        run: ./gradlew build -PlibVersion=${{ steps.versioning.outputs.SNAPSHOT_VERSION }}

      - name: Publish Snapshot to GitHub Packages
        env:
          # GITHUB_ACTOR is automatically provided by Actions
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Automatically provided by Actions
        run: ./gradlew publish -PlibVersion=${{ steps.versioning.outputs.SNAPSHOT_VERSION }}
